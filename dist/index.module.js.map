{"version":3,"file":"index.module.js","sources":["../src/store.js","../src/index.js"],"sourcesContent":["export default class Store {\n  constructor(controller) {\n    this.controller = controller;\n  }\n\n  get togglers() {\n    return this.controller.togglers;\n  }\n\n  get openedTogglers() {\n    return this.controller.openedTogglers;\n  }\n\n  get key() {\n    return this.controller.storeKeyValue;\n  }\n\n  load() {\n    if (!this.key) return;\n\n    let ids = this.constructor.load(this.key);\n    if (!ids) return;\n\n    let idSet = new Set(ids);\n    this.togglers.forEach(toggler => {\n      let content = this.controller.findContent(toggler);\n      if (idSet.has(this.controller.getID(toggler))) {\n        this.controller.show(toggler, content)\n      } else {\n        this.controller.hide(toggler, content);\n      }\n    });\n  }\n\n  save() {\n    if (!this.key) return;\n\n    let ids = this.openedTogglers.map(toggler => this.controller.getID(toggler));\n    this.constructor.save(this.key, ids);\n  }\n\n  static load(key) {\n    let json = sessionStorage.getItem(key);\n    try {\n      return JSON.parse(json)\n    } catch(error) {\n      console.error(error);\n      return null;\n    }\n  }\n\n  static save(key, value) {\n    try {\n      sessionStorage.setItem(key, JSON.stringify(value));\n    } catch(error) {\n      console.error(error);\n      return null;\n    }\n  }\n}\n","import { Controller } from '@hotwired/stimulus';\nimport Store from './store';\nimport './index.scss';\n\nexport default class extends Controller {\n  static values = {\n    storeKey: String\n  };\n\n  get togglers() {\n    return this.context.bindingObserver.bindings\n               .filter(binding => binding.action.methodName == 'toggle')\n               .map(binding => binding.action.element);\n  }\n\n  get openedTogglers() {\n    return this.togglers.filter(toggler => this.isOpened(toggler));\n  }\n\n  get contents() {\n    return this.scope.findAllElements('[data-accordion-id]')\n  }\n\n  connect() {\n    'Using the Mast version of stimulus-accordion'\n    \n    this.enableTrans(false);\n\n    this.init();\n    this.store = new Store(this);\n    this.store.load();\n\n    setTimeout(() => this.enableTrans(true), 200);\n  }\n\n  enableTrans(enabled) {\n    this.contents.forEach(content => {\n      if (enabled) {\n        content.classList.remove('st-accordion--disable-trans');\n      } else {\n        content.classList.add('st-accordion--disable-trans');\n      }\n    });\n  }\n\n  init() {\n    this.togglers.forEach(toggler => {\n      let content = this.findContent(toggler);\n      if (this.isOpened(toggler)) {\n        this.show(toggler, content);\n      } else {\n        this.hide(toggler, content);\n      }\n    })\n  }\n\n  toggle(e) {\n    this.togglers.forEach(toggler => {\n      if (toggler.contains(e.target)) {\n        if (this.isOpened(toggler)) {\n          this.close(toggler);\n        } else {\n          this.open(toggler);\n        }\n      }\n    });\n\n    e.preventDefault();\n  }\n\n  open(toggler) {\n    let content = this.findContent(toggler);\n    this.show(toggler, content);\n    this.store.save();\n    this.dispatch('opened', { detail: { toggler: toggler, content: content } });\n  }\n\n  close(toggler) {\n    let content = this.findContent(toggler);\n    this.hide(toggler, content);\n    this.store.save();\n    this.dispatch('closed', { detail: { toggler: toggler, content: content } });\n  }\n\n  show(toggler, content) {\n    this.toggleClass(toggler, content, true);\n  }\n\n  hide(toggler, content) {\n    this.toggleClass(toggler, content, false);\n  }\n\n  isOpened(toggler) {\n    return toggler.matches('.st-accordion__icon--opened');\n  }\n\n  toggleClass(toggler, content, opened) {\n    if (opened) {\n      toggler.classList.add('st-accordion__icon--opened');\n      content.classList.add('st-accordion__content--visible');\n      content.style.height = 'unset';\n    } else {\n      toggler.classList.remove('st-accordion__icon--opened');\n      content.classList.remove('st-accordion__content--visible');\n      content.style.height = '0px';\n    }\n\n    if (opened) {\n      let openedText = toggler.getAttribute('data-accordion-opened-text-param');\n      if (openedText) toggler.innerHTML = openedText;\n    } else {\n      let closedText = toggler.getAttribute('data-accordion-closed-text-param');\n      if (closedText) toggler.innerHTML = closedText;\n    }\n  }\n\n  findContent(toggler) {\n    let id = this.getID(toggler);\n    return this.scope.findElement(`[data-accordion-id=\"${id}\"]`);\n  }\n\n  getID(toggler) {\n    return  toggler.getAttribute('href').replace(/^#/, '');\n  }\n}\n"],"names":["Store","constructor","controller","this","togglers","openedTogglers","key","storeKeyValue","load","ids","idSet","Set","forEach","toggler","content","findContent","has","getID","show","hide","save","map","static","json","sessionStorage","getItem","JSON","parse","error","console","value","setItem","stringify","Controller","context","bindingObserver","bindings","filter","binding","action","methodName","element","isOpened","contents","scope","findAllElements","connect","enableTrans","init","store","setTimeout","enabled","classList","remove","add","toggle","e","contains","target","close","open","preventDefault","dispatch","detail","toggleClass","matches","opened","style","height","openedText","getAttribute","innerHTML","closedText","id","findElement","replace","values","storeKey","String"],"mappings":"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"}